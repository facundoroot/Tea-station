/* =================================================
FONTS
========================================================== 
*/
/* importo fonts de google */
/* la customizacion de la letra es tamanio 400(body) y 700(heading) para despues usarlos */
@import url("https://fonts.googleapis.com/css?family=Catamaran:400,700|Grand+Hotel");

/*

==============================================================
VARIABLES
======================================================================
*/

/* armo una variable, despues en otros proyectos puedo cambiar el color */
:root {
  --color-primario: #678e3e;
  --color-primario-suave: #beed8c;
  --color-gris-1: #102a42;
  --color-gris-5: #617d98;
  --color-gris-10: #f1f5f8;
  --color-blanco: #fff;
  --fontfamily-primario: "Catamaran", sans-serif; /*primero las importe (google)y ahora las agrego como variable*/
  --fontfamily-secundario: "Grand Hotel", cursive;
  --transicion: all 0.3s linear;
  --spacing: 0.25rem;
  --radious: 0.5rem;
}
/* ahora que terminamos de armar las variables en root, armemos algunas global styles */

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--fontfamily-primario);
  background: var(--color-blanco);
  color: var(--color-gris-1);
  line-height: 1.5;
  font-size: 0.875rem; /* esto va a ser para la pantalla chica, para la grande la cambiamos despues */
}
ul {
  list-style-type: none;
}
a {
  text-decoration: none;
}
img {
  width: 100%;
  display: block;
}
h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
}
h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.5rem;
}
h4 {
  font-size: 0.875rem;
}
p {
  margin-bottom: 1.25rem;
}
/* recordar que todo esto por ahora es para la pantalla chica */
/* luego usaremos el media querie para modificar para pantallas ams grandes */
/* ahora si modifiquemos el media querie para una pantalla ams grande */

@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 2rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  /* tambien quiero modificar los headings, copio y pego*/
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}
/* estos serian nuestros global styles */
/* obviamente vamos a modificar algunas cosas, pero para la base esta bien */
/* ahora seguimos con mas global css */
.button {
  text-transform: uppercase;
  background: var(--color-primario);
  color: var(--color-blanco);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  display: inline-block; /* lo agrego por si en algun momento quiero agregar algun tipop de margen, que sea respetado por la pagina*/
  font-weight: 700;
  transition: var(
    --transicion
  ); /*propiedades de la transicion, tiempo, duracoin, retroceso,etc va a ser la transicion del hovering que hago mas abajo*/
  font-size: 0.875;
  border: none;
  cursor: pointer; /*cuando hago hovering que aparezca la manito*/
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}
/* ahora agreguemos el hovering */
.button:hover {
  color: var(--color-primario);
  background: var(--color-primario-suave);
}

/* agrego algunas cosas del about que despues rehusare */
.section-title {
  margin-bottom: 2rem;
}
.section-title h3 {
  font-family: var(--fontfamily-secundario);
  color: var(--color-primario);
}
.section-center {
  /* va a ser reponsable del ancho de la seccion */
  /*esto va a modificar al principio la imagen en about de la tetera con la taza humeante, pero luego lo uso para todo la envoltura*/
  /* va a servir para armar varias secciones de la misma manera */
  padding: 4rem 0;
  width: 85vw;
  margin: 0 auto;
  /* de esta manera la imagen quedo con unos margenes lindos y centrados, el problema es que a medida que se agranda la pagina se agranda la imagen y no queremos eso */
  max-width: 1170px;
  /* entonces en este container el ancho va a ser del 85% del view y como maximo 1170px,
   asi que llega un momento que va a dejar de ser 85% y sera como max 1170px */
}
/* ca,bio algunas cositas de cuando se vuelve mas grande la pantalla para la center-section que usare varias veces */
@media screen and (min-width: 992px) {
  .section-center {
    width: 95vw;
    padding: 4rem 1rem;
  }
}

.green {
  color: var(--color-primario);
}

.red {
  color: red;
}
/*
=========================================================================================================================================
Navbar
======================================================================================================================================
*/

.nav-links {
  display: none; /*escondo los links para las pantallas chicas*/
}
.nav {
  height: 5rem;
  padding: 1rem;
  display: grid; /*todavia noe stoy acomodando el titulo y el boton,e es solo para acomodar el container que tiene a ambos en el centro o sea es el container del container*/
  align-items: center; /*alineo verticalmente en el centro*/
  transition: var(
    --transition
  ); /*mas adelante voy a poner display fixed, y quiero que la transicion sea smooth, sino sigue siendo fixed sin problema, pero la transicion va a ser media brusca */
}
/* esto que viene ahora es para la pantalla grande, lo hago ahora por que esta parte no hace falta hacerla en elmedia querie */
.nav-center {
  width: 100%;
  max-width: 1170px; /*de esta manera cuando la pantalla sea grande lo maximo que se va a poder estirar es eso*/
  margin: 0 auto; /*asi siempre esta en el centro*/
}
.nav-header {
  /*aca esta el titulo y el boton o sea este es mi container*/
  display: grid; /*uso grid para controlar los children*/
  grid-template-columns: auto 1fr; /*tengo 2 columnas cada children en una, la columna de la derecha ocupa lo maximo que pueda estirarse la imagen (si el anchoe s 100px se estira 100px), y la izquierda ocupa lo que se pueda estirar la imagen*/
  align-items: center; /*los alineo verticalmente*/
}
/* entonces con el grid de mi container me arme 2 columnas, en una el titulo y en la otra el boton o sea en cada  una un children */

.nav-btn {
  position: fixed;
  background: transparent;
  border-color: transparent;
  color: var(--color-primario);
  font-size: 2rem;
  cursor: pointer;
  z-index: 4;
}
/* ahi termino el setup de nuestro navbar para el small, screen lo que faltaria es trabajar con los links que van a estar dentro del boton y darle funcionalidad al boton  */
/* pero la parte estetica a simple vista ya esta */

/*
========================================================================================================================================================================================================================================================================== 
Sidebar
===============================================================================================================================================================================================================================================================
*/
/* el sidebar vamos a poder acceder cuando tenemos la pantalla chica, a travez del boton */
/* en el sidebar estan los links en fila de las secciones del sitio, y abajo uno alado del otro iconos de redes sociales que son links tambien */
.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--color-primario-suave);
  z-index: 4;
  display: grid; /*mirar que este container tiene adentro un solo children que es el div, dentro del div estan los iconos y links y todo eso, pero este grid de container va a afectar a ese elemento
  y usamo grid para acomodar ese elemento en el centro*/
  /* align-items: center;
  justify-content: center; */
  place-items: center; /*hace lo mismo que la combinacion de las 2 de arriba*/
  transition: var(
    --transition
  ); /*ya que al cerrar y abrir el sidebar lo hace con el timepo, no de inmediato*/
  /* add later */
  transform: translateX(
    -110%
  ); /*la escondo a la izquierda la barra, con js voy a traerla para aca cuando aprte el boton*/
}

.sidebar-links {
  margin-top: 20px;
  text-align: center;
}
.sidebar-links a {
  padding-left: 20px;
  font-size: 1rem;
  text-transform: capitalize;
  transition: var(--transition);
  color: var(--clr-grey-5);
  letter-spacing: var(--spacing);
  display: inline-block; /*asi me toma el margen que quiero poner entre los links*/
  margin-bottom: 1.5rem;
  transition: var(--transition);
}
.sidebar-links a:hover {
  color: var(--clr-primary-5);
}
.sidebar-links li {
  line-height: 0.3;
}

/* ahora vamos a acomodar el boton x en el extremo superior derecho del sidebar */
.close-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 1.25rem;
  background: transparent;
  border: transparent;
  transition: var(--transition);
  color: var(--color-primario);
  cursor: pointer;
}
.close-btn:hover {
  color: var(--clr-grey-3);
}

.login-form {
  background: var(--color-blanco);
  border-radius: var(--radious);
}
.login-form .form-control {
  background: var(--color-gris-10);
  margin-bottom: 0.5rem;
}

.manage {
  text-align: center;
  font-size: 1.1rem;
}
.manage a {
  line-height: 1.2rem;
  color: var(--color-primario);
}

.manage .espacio {
  padding-right: 0.9rem;
  line-height: 5rem;
}
.login-form .submit-btn.button {
  border-radius: 0px;
}
/* ahora vamos a usar js para traer devuelta la sidebar cuando apretamos el boton */
.show-sidebar {
  transition: var(--transicion);
  transform: translateX(0);
}

/* con translate 0 el sidebar esta denuevo en su posicion original, y con js hacemos que cuando apretamos el boton haga esa accion */
/* la idea es que el js se conecta con el id y despues con esta clase que creamos le decimos que hacer al js cuando llamo a la accion */

@media screen and (min-width: 668px) {
  .sidebar {
    width: 500px;
    height: 450px;
    margin-left: 10px;
    margin-top: 10px;
    border-radius: var(--radious);
  }
}
.nombre {
  text-align: center;
  margin-top: 20px;
  margin-bottom: 20px;
}
/*
========================================================================================================================================================================================================================================================================== 
Hero
===============================================================================================================================================================================================================================================================
*/

.hero {
  min-height: 100vh; /*con esto hacemos que la imagen ocupe el 100% de al alto del bloque div header*/
  background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),
    /*si usara ./ para el url buscaria dentro de la carpeta de este archivo, o sea la carpeta css, como las imagenes no estan ahi quiero que busque en la carpeta root, uso ../*/
      url("../images/main-bcg.jpeg") center/cover no-repeat fixed; /*recordar que el ultimo parametro de rgba es el opacity*/

  /* ahora quiero centrar el texto en el centro, necesito entonces usar position-absolute,pero para eso necesito que alguien sea position relative,a si que defino a este como eso  */
  position: relative;
  /* por ultimo aniado una cosa que me va a ayudar mucho, como puse muchas animaciones que afectan a el eje x
  cuando corra las animaciones van a aparecer cosas raras por tanta combinacion de cosas en x, asi que con overflow hidden, significa que 
  en el eje x, las cosas que se pasen de grande o de chico de x no se muestran, entonces todo queda mas lindo*/
  overflow-x: hidden;
}

.banner {
  /*aca en banner es el div donde ntego los dos titulos y el link que quiero centrar*/
  text-align: center;
  position: absolute; /*posicion relativa*/
  top: 50%; /*50% de distancia relativa a la parte de arriba*/
  left: 50%;
  /* ahora cuando guardamos estos cambios nos damos cuenta que el bloque no queda centrado centrado sino que la esquina superior izquierda se encuentra en el centro, entonces deberiamos correrlo la mitad de su tamanio a la izquierda
  y la mitad de su tamanio arriba para que el bloque realmente quede centrado */
  /* para eso uso transform translate */
  transform: translate(-50%, -50%);
  /* ahora si quedo centrado el bloque (puedo ponerle backfround de algun color al bloque para ver mas facil que esta pasando) */
}

.banner h2 {
  font-family: var(--fontfamily-secundario);
  color: var(--color-primario);
  /* animacion ya la cree abajo en animaciones, ahora solo se al aplico*/
  -webkit-animation: apareceDeDerecha 2s ease-in-out 1;
  animation: apareceDeDerecha 2s ease-in-out 1;
}
.banner h1 {
  /* en este caso hay algunas cosas del global style que uso, asi que cambio las que no necesito */
  text-transform: uppercase;
  color: var(--color-blanco);
  margin-top: 1.25rem;
  margin-bottom: 2rem;
  /* animacion ya la cree abajo en animaciones, ahora solo se al aplico*/
  -webkit-animation: apareceDeIzquierda 2s ease-in-out 1;
  animation: apareceDeIzquierda 2s ease-in-out 1;
}
.banner-button {
  /*esta clase es especifica del boton del banner, mirar el html*/
  outline: 0.125rem solid var(--color-primario);
  outline-offset: 0.25rem; /*con este puedo mover el outline*/

  font-size: 1.25rem;
  padding: 1rem 1.75;
  /* animacion ya la cree abajo en animaciones, ahora solo se al aplico*/
  -webkit-animation: aparece 2s linear 1;
  animation: aparece 2s linear 1;
}

/*
==============================================================
AINMACION DE TITULO DE HEADER Y NAVBAR
======================================================================
*/
/* comienzo con la animacion para que se achique y se agrande el nav button */
@-webkit-keyframes rebote {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes rebote {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
  100% {
    transform: scale(1);
  }
}
/* ahora que tengo mi animacion, se la aplico al navbutton, asi que voy ahi y se la aplico, mirar en nav-btn que hago referencia */
@-webkit-keyframes apareceDeDerecha {
  0% {
    transform: translateX(50px);
    opacity: 0;
  }
  50% {
    transform: translateX(-100px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(25px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}
@keyframes apareceDeDerecha {
  0% {
    transform: translateX(50px);
    opacity: 0;
  }
  50% {
    transform: translateX(-100px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(25px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}
@-webkit-keyframes apareceDeIzquierda {
  0% {
    transform: translateX(-50px);
    opacity: 0;
  }
  50% {
    transform: translateX(100px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(-25px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}
@keyframes apareceDeIzquierda {
  0% {
    transform: translateX(-50px);
    opacity: 0;
  }
  50% {
    transform: translateX(100px);
    opacity: 0.5;
  }
  75% {
    transform: translateX(-25px);
    opacity: 0.75;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}
@-webkit-keyframes aparece {
  0% {
    transform: scale(1.15);
    opacity: 0;
  }
  50% {
    transform: scale(1.55);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes aparece {
  0% {
    transform: scale(1.15);
    opacity: 0;
  }
  50% {
    transform: scale(1.55);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
/*

==============================================================
CONTENT-DIVIDER
======================================================================
*/

.content-divider {
  height: 0.5rem;
  background: linear-gradient(
    to left,
    var(--color-primario),
    #e9b949,
    var(--color-primario)
  );
}

/*

==============================================================
SKILLS
======================================================================
*/

.skills {
  /*tocos los skills en general*/
  background: var(
    --color-gris-10
  ); /* los botones van a tener un fondo gris clarito*/
}
.skill {
  /*ahora me meto mas especifico*/
  padding: 2.5rem 0; /*2.5 para arriba y abajo y 0 para izquierda y derecha*/
  text-align: center; /* no solo me centro el texto sino los iconos tambien*/
  transition: var(--transicion);
}
.skill-icon {
  font-size: 2.5rem;
  margin-bottom: 1.25rem;
  transition: var(
    --transicion
  ); /*le agrego las pro de transicion para abajo cuando armo el hover*/
  /* ahora voy a agregar un display block ya que aunque agregamos el margen de 1.25rem, no se modifica nada
   esto pasa por que span es un in-line element y el sitio web no respeta los cambios echos a un inline element, por eso debemos asegurarnos
   que span es un inline block tambien */
  display: inline-block;
  color: var(--color-primario);
}
.skill-text {
  color: var(--color-gris-5);
  max-width: 17rem; /*uso este maximo width chico para que no me ocupe todo el renglon a lo largo la frase sino que se divida en varios renglones*/
  /* cuando use el max width, los textos me quedaron en dos renglones pero se me fueron a la izquierda, me gustaria centrarlos pero ya uset text center en el skill general
asi que tengo que usar otra manera */
  margin: 0 auto; /*para ariiba y abajo no me importa, para izquierda y derecha auto
donde auto acomoda automaticamente dependiendo del ancho del elemento y contenedor
en general sirve para centrar*/
}
.skill:hover {
  background: var(--color-blanco);
  box-shadow: 0 2px var(--color-primario); /*le doy sombra al eje y, ene ste caso verde*/
}
.skill:hover .skill-icon {
  /* quiero que cada vez que haga haga hovering sobre los bloques skill, estas propiedades que escribo ahora afecten solo al icono */
  transform: translateY(-5px);
  /* con esto se cuando hacemos hovering por los blosques skills se levantan un poquito los iconos */
}

/* ahora hago lo mismo para la pantalla mas grande, nada mas que ahora ne vez de dos columnas de 2 quiero una sola fila de las 4 juntas */

@media screen and (min-width: 576px) {
  .skills {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}

@media screen and (min-width: 1200px) {
  .skills {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}

/*
==============================================================
ABOUT
======================================================================
*/
/* lo primero que hago es armar en global styles una section-center que rehusare varias veces */
/* ahora vamos a agregar padiding a la imagen y los titulos para que no esten tan pegados */
.about-img,
.about-info {
  padding: 2rem 0;
}
/* nos armarmos el container en global styles, asi que ahora para about en especifico modifiquemos algunas cosas */
.about-picture-container {
  background: var(--color-primario);
  border: 0.5rem solid var(--color-primario);
  max-width: 30rem; /*hago que el container tenga este maximo, como la imagen ocupa el 100%, sera el ancho maximo de la imagen*/
  /* extra stuff  leer en el hovering de abajo por que lo hago*/
  overflow: hidden; /* asi la imagen cuando se agrande no se escapa del container*/
}
.about-picture {
  transition: var(--transicion);
}
.about-picture-container:hover .about-picture {
  opacity: 0.5;
  transform: scale(1.2);
  /* una vez que hice todo esto y hago el hovering la imagen se vuelve mas grande, pero se escapa del container, por eso arriba en extra stuff voy a escribir cosas para que no pase */
}
.about-text {
  max-width: 26rem; /* para que la frase no ocupe todo el largo de la pantalla*/
  color: var(--color-gris-5);
}

/* ahora quiero que cuando la pantalla se haga mas grande el bloque de titulos y texto me quede alado de la imagen o sea como antes 2 columnas */
@media screen and (min-width: 992px) {
  .section-center {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
  /* voy a arreglarlo un poco para cuando este la imagen alado del texto no esten pegados del todo */
  .about-info {
    padding-left: 2rem;
  }
}

/*

=============================================================================================================================================================
PRODUCTS
=================================================================================================================================================================
*/
.products {
  background: var(--color-gris-10);
}

.products .section-center {
  display: grid;
  grid-template-columns: 1fr;
  padding-bottom: 1rem;
}

/* voy a agregar padding ya que las imagenes estan pegadas ak bitin y al texto */
.products article {
  padding: 2rem 0;
}
.product-text {
  color: var(--color-gris-5);
  max-width: 26rem; /* para que no ocupe todo el renglon el texto*/
}
.product {
  text-align: center;
  margin-bottom: 3rem;
}

.product-img {
  border-radius: var(--radious);
  margin-bottom: 2rem;
  height: 17rem;
  /* hasta aca todo bien pero cuando cambio height se me distorciona las imagenes, asi que uso  objetx fit para arreglarlo */
  -o-object-fit: cover;
  object-fit: cover;
}
.product-price {
  color: var(--fontfamily-primario);
}

.product .service-btn {
  text-align: center;
  margin-top: 0.1rem;
}

@media screen and (min-width: 768px) {
  .products .section-center {
    display: grid;
    grid-template-columns: 1fr;
    column-gap: 20px;
  }

  .products-inventory {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 25px;
  }
}

@media screen and (min-width: 995px) {
  .products .section-center {
    display: grid;
    grid-template-columns: 1fr;
    column-gap: 20px;
  }

  .products-inventory {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 25px;
  }
}

@media screen and (min-width: 1200px) {
  .products .section-center {
    display: grid;
    grid-template-columns: 1fr 2fr;
    column-gap: 20px;
  }

  .products-inventory {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 25px;
  }
}

/*

=============================================================================================================================================================
SERVICES
=================================================================================================================================================================
*/

.services-title {
  margin-top: 4rem;
  margin-bottom: -4rem;
  /* hasta ahora la mayoria de los titulos estaban a la izquierda, este lo quiero en el centro */
  text-align: center;
}
.service-card {
  /* donde cada card como dijimos antes es el conjunto de imagen, icono titulo y texto y boton, tengo 3 cards*/
  margin: 2rem 0; /* cuando no le puse el 0 no me quedaban una alado de la otra, mirarlo mejor despues*/
  background: var(--color-gris-10);
  border-radius: var(
    --radious
  ); /*notar que como la imagen esta arriba la parte de abajo de la card si se redondean las puntas pero a la imagen vamos a tener que hacer que tome radio tambien*/
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transicion);
}
.service-card:hover {
  transform: scale(1.02);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}
.service-img {
  height: 17rem;
  -o-object-fit: cover;
  object-fit: cover;

  /* ahora si le agregamos radio a la imagen, el problema es que donde se une el texto con la imagen, las esquinas va a haber un radio en la imagen entonces ahi no se pegan y no queremos eso */
  /* asi que le agregamos radio especifico para arriba */
  border-top-left-radius: var(--radious);
  border-top-right-radius: var(--radious);
}
/* ahora nos metemos con el texto y los titulos y el boton, dejo para lo ultimo centrar el icono que es lo complicado */
.service-info {
  text-align: center;
  padding: 3rem 1rem 2.5rem 1rem;
}
.service-info p {
  max-width: 20rem;
  color: var(--color-gris-5);
  /* ahora otra vez nos quedo el texto al costado asi que lo arreglamos como siemore */
  margin: 0 auto;
}
.service-btn {
  font-size: 0.75rem;
  text-transform: capitalize;
  padding: 0.375rem 0.5rem;
  border-radius: var(--radious);
  font-weight: 400;
  margin-top: 1.25rem;
}
/* por ahora para la pantalla chica estan las 3 tarjetas una arriba de la otra
para cuando sea mas grande la pantalla voy a necestitar que me queden las 3 una alado de la otra */

/* AHORA VAMOS A METERNOS CON EL ICONO */

/* primero que nada vamos a utilizar position absoluto para poner el icono en el centro de cada carta */
/* para poder usar la posicion absoluta necesitamos que los iconos esten en un container que usa como posicion de referencia */
/* en nuestro caso cada icono esta en el container que es cada carta, tenemos un service-img-container esa es la razon por la que armamos el container*/

/* hago que el container sea relativo  */

.service-img-container {
  position: relative;
}
.service-icon {
  position: absolute; /* ahora si la posicion es relativa al container*/
  left: 50%; /*me muevo 50% relativo al container, me queda en */
  bottom: 0; /*ahora si me queda justo donde empieza la foto*/
  font-size: 2rem;
  color: var(--color-primario);
  background: var(--color-primario-suave);
  padding: 0.25rem 0.6rem;
  /* hasta ahora tengo un cuadrado verde suave, con el icono verde oscuro adentro */
  border-radius: 50%; /* ahi me queda redondo el icono*/
  /* ahora tengo que usar transform, ya que no me quedo justo en el medio de la carta el icono, sino que el extremo izquiero del icono quedo en el centro ,
 asi que deberia moverlo un 50% del ancho del icono a la izquierda para que quede centrado
 por ultimo lo quiero mover 50% para abajo asi la mitad del circulo que contiene al icono esta en la foto y la otra mitad en la parte de los titulos*/
  transform: translate(-50%, 50%);
  /* por ultimo le agrego el borde del color donde esta el texto asi como dije antes parece una pieza de rompecabezas la parte del textp e icono incrutada en la otra parte que seria la imagen */
  border: 0.375rem solid var(--color-gris-10);
}

@media screen and (min-width: 768px) {
  .services .section-center {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 30px;
  }
}

@media screen and (min-width: 995px) {
  .services .section-center {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 40px;
  }
}

/*

=============================================================================================================================================================
CONTACT
=================================================================================================================================================================
*/
.contact-section {
  background: var(--color-gris-10);
}
.contact-form,
.contact-info {
  margin: 1rem 0;
}
.contact-item {
  margin-bottom: 1.75rem;
}
.contact-title {
  color: var(--color-primario);
  font-weight: 400;
}
.contact-text {
  text-transform: uppercase;
}
.contact-form {
  background: var(--color-blanco);
  border-radius: var(--radious);
  text-align: center;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: var(--transicion);
  max-width: 35rem; /*asi para pantallas grandes no queda demasiado grande*/
}
.contact-form:hover {
  box-shadow: 0 5px rgba(0, 0, 0, 0.2);
}
.contact-form h3 {
  padding-top: 1.25rem;
  color: var(--color-gris-5);
}
.form-group {
  padding: 1rem 1.5rem;
}
.form-control {
  width: 100%; /*no van a ocupar el 100% por que tiene padding de antes pero casi todo*/
  padding: 0.75rem 1rem; /*este es el padding interno de cada uno de los forums no es el padding general*/
  border: none; /*asi se va el borde de el foro nombre, el de email y el de message*/
  margin-bottom: 1.25rem;
  background: var(--color-gris-10);
  border-radius: var(--radious);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}
/* en algunos buscadores web, los placeholders no heredan bien los valores, asi que vamos a especificar esos valores directo al placeholder, para que tengan las mismas propiedades independeintemente de el navegador */

.form-control::-webkit-input-placeholder {
  font-family: var(--fontfamily-primario);
  color: var(--color-gris-1);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

.form-control::-moz-placeholder {
  font-family: var(--fontfamily-primario);
  color: var(--color-gris-1);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

.form-control:-ms-input-placeholder {
  font-family: var(--fontfamily-primario);
  color: var(--color-gris-1);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

.form-control::-ms-input-placeholder {
  font-family: var(--fontfamily-primario);
  color: var(--color-gris-1);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

.form-control::placeholder {
  font-family: var(--fontfamily-primario);
  color: var(--color-gris-1);
  text-transform: uppercase;
  letter-spacing: var(--spacing);
}

.submit-btn {
  /* primero voy a hacer que ocupe el largo del bloque */
  display: block;
  width: 100%;
  /* ahora sigo con el resto */
  padding: 1rem;
  border-bottom-left-radius: var(--radious);
  border-bottom-right-radius: var(--radious);
}
/*
=============================================================================================================================================================
Register
=================================================================================================================================================================
*/
.register {
  /* con margin left y right auto centro cualquier bloque horizontalmente */
  margin-left: auto;
  margin-right: auto;
  background: var(--color-primario-suave);
  margin-top: 90px;
  margin-bottom: 90px;
}
/*
=============================================================================================================================================================
FOOTER
=================================================================================================================================================================
*/
.footer {
  background: #222;
  text-align: center;
}

footer .section-center {
  display: grid;
  grid-template-columns: 1fr;
}

footer .social-icons {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  justify-self: center;
}

.social-icon {
  color: var(--color-blanco);
  font-size: 1.5rem;
  margin-right: 0rem;
  transition: var(--transicion);
}
.social-icon:hover {
  color: var(--color-primario);
}
.footer-text {
  text-align: center;
  margin-top: 1.25rem;
  text-transform: uppercase;
  color: var(--color-blanco);
  font-weight: 400;
}
.company {
  color: var(--color-primario);
}

/*
=============================================================================================================================================================
Cosillas
=================================================================================================================================================================
*/

.gestionar-categorias {
  margin-top: 20px;
  text-align: center;
  margin-bottom: 20px;
}
table {
  border: 1px solid var(--color-primario);
  width: 100%;
  text-align: center;
  margin-bottom: 70px;
}
td {
  border-top: 1px solid var(--color-primario);
  padding: 2px;
}
table th {
  background-color: var(--color-primario);
}
.nueva-clase {
  margin-top: 30px;
  padding-left: 20px;
  margin-bottom: 20px;
}
.delete .button.service-btn {
  background: red;
}
.delete .button {
  background: red;
}
.ver-product {
  max-width: 30rem;
  margin-left: auto;
  margin-right: auto;
}

@media screen and (min-width: 768px) {
  .ver-product-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}

.carrito img {
  margin-left: auto;
  margin-right: auto;
  margin-top: 8px;
  margin-bottom: 8px;
  width: 20rem;
}

.table {
  padding: 1rem 0;
  width: 85vw;
  margin: 0 auto;
}

.pedido {
  margin-left: 100px;
  margin-bottom: 50px;
}
